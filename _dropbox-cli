#compdef dropbox-cli
#autoload

local -a _1st_arguments
_1st_arguments=(
    'status:get current status of the dropboxd'
    'puburl:get public url of a file in your dropbox'
    'start:start dropboxd'
    'stop:stop dropboxd'
    'ls:list directory contents with current sync status'
    'filestatus:get current sync status of one or more files'
    'exclude:ignores/excludes a directory from syncing'
    'lansync:enables or disables LAN sync'
    'running:return whether dropbox is running'
    'autostart:automatically start dropbox at login'
    'help:provide help'
)

_dropbox_autostart=(
	'y:dropbox will start automatically at login'
	'n:dropbox will not start automatically at login'
)

_dropbox_lansync=(
	'y:dropbox will use LAN sync'
	'n:dropbox will not use LAN sync'
)

_dropbox_exclude=(
	'list:prints a list of directories currently excluded from syncing'
	'add:adds one or more directories to the exclusion list, then resynchronizes Dropbox'
	'remove:removes one or more directories from the exclusion list, then resynchronizes Dropbox'
)


_dropbox_exclude_files=(
    $(
	    dropbox-cli exclude list | sed 1d | awk '{ print "\""$0"\""}'  
    )
)

_arguments \
	'*:: :->subcmds' && return 0

if (( CURRENT == 1 )); then
	_describe -t commands "Dropbox-cli subcommand" _1st_arguments
	return
fi

if (( CURRENT == 2 )); then
	case "$words[1]" in
		autostart)
			_describe -t commands "Dropbox-cli autostart" _dropbox_autostart
		;;
		lansync)
			_describe -t commands "Dropbox-cli lansync" _dropbox_lansync
		;;
		exclude)
			_describe -t commands "Dropbox-cli exclude" _dropbox_exclude
		;;
		puburl|ls|filestatus)
			_files
		;;
		*)
			return
		;;
	esac
fi

if (( CURRENT > 1 )); then
	case "$words[1]" in
		puburl|ls|filestatus)
			_files
		;;
	esac
fi

if (( CURRENT > 2 )); then
	if [[ "$words[1]" == "exclude" ]]; then
		case "$words[2]" in
			add)
				_files
			;;
			remove)
  				_arguments "*: :( $_dropbox_exclude_files )" 
			;;
		esac
	fi
fi



return
